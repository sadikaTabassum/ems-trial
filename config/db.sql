

BEGIN EXECUTE IMMEDIATE 'DROP TABLE SERVICE_RESERVATION CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE EVENT_RESERVATION CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE SERVICE_TYPE CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE EVENT_TYPE CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE AVAILABLE_ROOM_PER_HOTEL CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE ROOM_TYPE CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE HOTEL CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE USERS CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/



CREATE TABLE USERS (
    USER_ID     NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EMAIL       VARCHAR2(50)    NOT NULL,
    PASSWORD    VARCHAR2(255)   NOT NULL,
    IMG_URL     VARCHAR2(2048),
    USER_TYPE   VARCHAR2(50)    NOT NULL,
    CREATED_AT  TIMESTAMP       DEFAULT SYSTIMESTAMP
);

CREATE TABLE HOTEL (
    HOTEL_ID       NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    HOTEL_NAME     VARCHAR2(50)   NOT NULL,
    HOTEL_ADDRESS  VARCHAR2(100),
    STATE          VARCHAR2(50)   NOT NULL,
    ZIP_CODE       VARCHAR2(30),
    WEBSITE        VARCHAR2(255),
    PHONE          VARCHAR2(30)
);

CREATE TABLE ROOM_TYPE (
    ROOM_ID        NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ROOM_SIZE      VARCHAR2(30) 
        CHECK (ROOM_SIZE IN ('small_hall','medium_hall','large_hall')),
    ROOM_CAPACITY  NUMBER        NOT NULL,
    ROOM_PRICE     NUMBER(12,2)  NOT NULL,
    CONSTRAINT ROOM_CAPACITY_POSITIVE_CK CHECK (ROOM_CAPACITY > 0),
    CONSTRAINT ROOM_PRICE_POSITIVE_CK    CHECK (ROOM_PRICE > 0)
);

CREATE TABLE AVAILABLE_ROOM_PER_HOTEL (
    AVAILABLE_ROOM_ID  NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    HOTEL_ID           NUMBER NOT NULL,
    ROOM_ID            NUMBER NOT NULL,
    TOTAL_ROOM         NUMBER,
    AVAILABLE_ROOM     NUMBER,
    CONSTRAINT ARPH_HOTEL_FK FOREIGN KEY (HOTEL_ID) REFERENCES HOTEL (HOTEL_ID),
    CONSTRAINT ARPH_ROOM_FK  FOREIGN KEY (ROOM_ID)  REFERENCES ROOM_TYPE (ROOM_ID),
    CONSTRAINT ARPH_POS_CK   CHECK (TOTAL_ROOM >= 0 AND AVAILABLE_ROOM >= 0),
    CONSTRAINT ARPH_LE_CK    CHECK (AVAILABLE_ROOM <= TOTAL_ROOM)
);

CREATE TABLE EVENT_TYPE (
    EVENT_ID    NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EVENT_NAME  VARCHAR2(50) NOT NULL
);

CREATE TABLE SERVICE_TYPE (
    SERVICE_ID       NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SERVICE_NAME     VARCHAR2(30)  NOT NULL,
    SERVICE_APPLIES  VARCHAR2(30),
    SERVICE_AMOUNT   NUMBER(12,2)
);

CREATE TABLE EVENT_RESERVATION (
    EVENT_RESERVATION_ID  NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    GUEST_ID              NUMBER NOT NULL,
    HOTEL_ID              NUMBER NOT NULL,
    EVENT_ID              NUMBER NOT NULL,
    START_DATE            DATE,
    END_DATE              DATE,
    ROOM_ID               NUMBER NOT NULL,
    ROOM_QUANTITY         NUMBER NOT NULL,
    ROOM_INVOICE          NUMBER(12,2),
    DATE_OF_RESERVATION   DATE,
    NO_OF_PEOPLE          NUMBER,
    STATUS                NUMBER NOT NULL,
    CONSTRAINT STATUS_CK CHECK (STATUS IN (1,2,3)), -- 1=Reserved, 2=Cancelled, 3=Finished
    CONSTRAINT ER_GUEST_FK FOREIGN KEY (GUEST_ID) REFERENCES USERS (USER_ID),
    CONSTRAINT ER_HOTEL_FK FOREIGN KEY (HOTEL_ID) REFERENCES HOTEL (HOTEL_ID),
    CONSTRAINT ER_EVENT_FK FOREIGN KEY (EVENT_ID) REFERENCES EVENT_TYPE (EVENT_ID),
    CONSTRAINT ER_ROOM_FK  FOREIGN KEY (ROOM_ID)  REFERENCES ROOM_TYPE (ROOM_ID),
    CONSTRAINT ER_QTY_POS_CK CHECK (ROOM_QUANTITY > 0)
);

CREATE TABLE SERVICE_RESERVATION (
    SERVICE_RESERVATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EVENT_RESERVATION_ID   NUMBER NOT NULL,
    SERVICE_ID             NUMBER NOT NULL,
    SERVICE_DATE           DATE,
    CONSTRAINT SR_ER_FK FOREIGN KEY (EVENT_RESERVATION_ID)
        REFERENCES EVENT_RESERVATION (EVENT_RESERVATION_ID),
    CONSTRAINT SR_SVC_FK FOREIGN KEY (SERVICE_ID)
        REFERENCES SERVICE_TYPE (SERVICE_ID)
);



INSERT INTO HOTEL (HOTEL_NAME, HOTEL_ADDRESS, STATE, ZIP_CODE, WEBSITE, PHONE) VALUES
('Hotel ABC','1234, ABC Street, XYZ City','Maryland','21201','www.hotelabc.com','+1 123-456 (7890)');
INSERT INTO HOTEL (HOTEL_NAME, HOTEL_ADDRESS, STATE, ZIP_CODE, WEBSITE, PHONE) VALUES
('Hotel XYZ','5678, XYZ Street, ABC City','Maryland','21202','www.hotelxyz.com','+1 098-765 (4321)');
INSERT INTO HOTEL (HOTEL_NAME, HOTEL_ADDRESS, STATE, ZIP_CODE, WEBSITE, PHONE) VALUES
('Hotel PQR','9876, PQR Street, XYZ City','Maryland','21203','www.hotelpqr.com','+1 234-567 (8901)');

INSERT INTO ROOM_TYPE (ROOM_SIZE, ROOM_CAPACITY, ROOM_PRICE) VALUES ('small_hall', 100,  500);
INSERT INTO ROOM_TYPE (ROOM_SIZE, ROOM_CAPACITY, ROOM_PRICE) VALUES ('medium_hall',250, 1000);
INSERT INTO ROOM_TYPE (ROOM_SIZE, ROOM_CAPACITY, ROOM_PRICE) VALUES ('large_hall', 500, 2000);

INSERT INTO EVENT_TYPE (EVENT_NAME) VALUES ('Birthday');
INSERT INTO EVENT_TYPE (EVENT_NAME) VALUES ('Wedding');
INSERT INTO EVENT_TYPE (EVENT_NAME) VALUES ('Conference');
INSERT INTO EVENT_TYPE (EVENT_NAME) VALUES ('Workshop');
INSERT INTO EVENT_TYPE (EVENT_NAME) VALUES ('University Admission');
INSERT INTO EVENT_TYPE (EVENT_NAME) VALUES ('Hackathon');

INSERT INTO SERVICE_TYPE (SERVICE_NAME, SERVICE_APPLIES, SERVICE_AMOUNT) VALUES ('Breakfast','per_person',10);
INSERT INTO SERVICE_TYPE (SERVICE_NAME, SERVICE_APPLIES, SERVICE_AMOUNT) VALUES ('Lunch','per_person',20);
INSERT INTO SERVICE_TYPE (SERVICE_NAME, SERVICE_APPLIES, SERVICE_AMOUNT) VALUES ('DJ','per_event',500);
INSERT INTO SERVICE_TYPE (SERVICE_NAME, SERVICE_APPLIES, SERVICE_AMOUNT) VALUES ('Singer','per_event',2000);
INSERT INTO SERVICE_TYPE (SERVICE_NAME, SERVICE_APPLIES, SERVICE_AMOUNT) VALUES ('Pop band','per_event',10000);
